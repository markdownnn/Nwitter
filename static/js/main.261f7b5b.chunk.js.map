{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","placeHolder","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Profile","refreshUser","history","useHistory","getMyNweets","where","get","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAcAA,IAASC,cATc,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,cACnBK,MAAOL,6CAKF,IAAMM,EAAmBT,IACnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,UC6CxBC,EA7DE,WAAO,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAEWF,mBAAS,IAFpB,mBAEdG,EAFc,KAEJC,EAFI,OAGeJ,oBAAS,GAHxB,mBAGdK,EAHc,KAGFC,EAHE,OAIKN,mBAAS,IAJd,mBAIdO,EAJc,KAIPC,EAJO,KAKfC,EAAW,SAACC,GAAW,IAAD,EAGtBA,EADFC,OAAUC,EAFc,EAEdA,KAAMC,EAFQ,EAERA,MAEL,UAATD,EACFV,EAASW,GACS,aAATD,GACTR,EAAYS,IAGVC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACfL,EAAMM,iBADS,UAITX,EAJS,gCAKEZ,EAAYwB,+BACvBhB,EACAE,GAPS,OAKXe,EALW,+CAUEzB,EAAY0B,2BAA2BlB,EAAOE,GAVhD,QAUXe,EAVW,eAYbE,QAAQC,IAAIH,GAZC,kDAcbV,EAAS,KAAMc,SAdF,0DAAH,sDAmBd,OACE,uBAAMR,SAAUA,EAAhB,UACE,uBACEF,KAAK,QACLW,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRZ,MAAOZ,EACPQ,SAAUA,IAEZ,uBACEG,KAAK,WACLW,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRZ,MAAOV,EACPM,SAAUA,IAEZ,uBAAOc,KAAK,SAASV,MAAOR,EAAa,iBAAmB,WAC3DE,EACD,sBAAMmB,QArBY,kBAAMpB,GAAc,SAACqB,GAAD,OAAWA,MAqBjD,SACGtB,EAAa,SAAW,uBCzBlBuB,EA7BF,WACX,IAAMC,EAAa,uCAAG,WAAOnB,GAAP,iBAAAK,EAAA,4DAKP,YAHDH,EACRF,EADFC,OAAUC,MAIVkB,EAAW,IAAItC,EAAiBE,KAAKqC,mBACnB,WAATnB,IACTkB,EAAW,IAAItC,EAAiBE,KAAKsC,oBARnB,SAUDvC,EAAYwC,gBAAgBH,GAV3B,yDAAH,sDAanB,OACE,gCACE,cAAC,EAAD,IACA,gCACE,wBAAQlB,KAAK,SAASc,QAASG,EAA/B,kCAGA,wBAAQjB,KAAK,SAASc,QAASG,EAA/B,yC,QCwCOK,EA9DD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACTpC,oBAAS,GADA,mBAChCqC,EADgC,KACvBC,EADuB,OAEPtC,mBAASmC,EAASI,MAFX,mBAEhCC,EAFgC,KAEtBC,EAFsB,KAGjCC,EAAa,uCAAG,sBAAA3B,EAAA,0DACT4B,OAAOC,QAAQ,oCADN,gCAGZjD,EAAUkD,IAAV,iBAAwBV,EAASW,KAAMC,SAH3B,uBAIZlD,EAAemD,WAAWb,EAASc,eAAeF,SAJtC,2CAAH,qDAQbG,EAAgB,kBAAMZ,GAAW,SAACX,GAAD,OAAWA,MAE5Cb,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACfL,EAAMM,iBADS,SAETrB,EAAUkD,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAClDZ,KAAMC,IAHO,OAKfU,IALe,2CAAH,sDAed,OACE,8BACGb,EACC,qCACE,uBAAMvB,SAAUA,EAAhB,UACE,uBACES,KAAK,OACL6B,YAAY,mBACZvC,MAAO2B,EACP/B,SAhBK,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAEZ4B,EAAY5B,IAaFY,UAAQ,IAEV,uBAAOF,KAAK,SAASV,MAAM,oBAE7B,wBAAQa,QAASwB,EAAjB,uBAGF,qCACE,6BAAKf,EAASI,OACbJ,EAASc,eACR,qBAAKI,IAAKlB,EAASc,cAAeK,MAAM,OAAOC,OAAO,SAEvDnB,GACC,qCACE,wBAAQV,QAASgB,EAAjB,0BACA,wBAAQhB,QAASwB,EAAjB,iC,QCgBCM,EApEM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACVzD,mBAAS,IADC,mBAC7B0D,EAD6B,KACtBC,EADsB,OAEA3D,mBAAS,MAFT,mBAE7B4D,EAF6B,KAEjBC,EAFiB,KAG9B/C,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACfL,EAAMM,iBACFiC,EAAgB,GACD,OAAfW,EAHW,wBAIPE,EAAgBjE,EACnBkE,MACAC,MAFmB,UAEVP,EAAQQ,IAFE,YAEKC,gBANd,SAOUJ,EAAcK,UAAUP,EAAY,YAP9C,cAOPQ,EAPO,gBAQSA,EAASL,IAAIM,iBARtB,OAQbpB,EARa,sBAWTd,EAAW,CACfI,KAAMmB,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnBhB,iBAfa,UAkBTtD,EAAU+E,WAAW,UAAUC,IAAIxC,GAlB1B,QAmBfwB,EAAS,IAnBM,4CAAH,sDA4Cd,OACE,uBAAM7C,SAAUA,EAAhB,UACE,uBACES,KAAK,OACLV,MAAO6C,EACPjD,SA5BW,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAEZ8C,EAAS9C,IAyBLW,YAAY,uBACZoD,UAAW,MAEb,uBAAOrD,KAAK,OAAOsD,OAAO,UAAUpE,SA1BnB,SAACC,GAAW,IAIzBoE,EADFpE,EADFC,OAAUoE,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IAElBC,EACfD,EADFE,cAAiBD,OAEnBvB,EAAcuB,IAEhBJ,EAAOM,cAAcR,MAenB,uBAAOvD,KAAK,SAASV,MAAM,UAC1B+C,GACC,gCACE,qBAAKP,IAAKO,EAAYN,MAAM,OAAOC,OAAO,SAC1C,wBAAQ7B,QAhBU,kBAAMmC,EAAc,OAgBtC,0BC9BK0B,EA7BF,SAAC,GAAiB,IAAf9B,EAAc,EAAdA,QAAc,EACAzD,mBAAS,IADT,mBACrBwF,EADqB,KACbC,EADa,KAa5B,OAVAC,qBAAU,WACR/F,EAAU+E,WAAW,UAAUiB,YAAW,SAACC,GACzC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAAClD,GAAD,oBACnCC,GAAID,EAAIC,IACLD,EAAI3B,WAETuE,EAAUI,QAEX,IAGD,gCACE,cAAC,EAAD,CAAcpC,QAASA,IACvB,8BACG+B,EAAOO,KAAI,SAACrC,GAAD,OACV,cAAC,EAAD,CAEEvB,SAAUuB,EACVtB,QAASsB,EAAMe,YAAchB,EAAQQ,KAFhCP,EAAMZ,aC8BRkD,EAnDC,SAAC,GAA8B,IAA5BvC,EAA2B,EAA3BA,QAASwC,EAAkB,EAAlBA,YACpBC,EAAUC,cAKVC,EAAW,uCAAG,sBAAArF,EAAA,sEACGpB,EAClB+E,WAAW,UACX2B,MAAM,YAAa,KAAM5C,EAAQQ,KACjCqC,MAJe,yDAAH,qDAMjBZ,qBAAU,WACRU,MACC,IAdyC,MAgBApG,mBAASyD,EAAQ8C,aAhBjB,mBAgBrCC,EAhBqC,KAgBrBC,EAhBqB,KAyBtC3F,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBACFyC,EAAQ8C,cAAgBC,EAFb,gCAGP/C,EAAQiD,cAAc,CAC1BH,YAAaC,IAJF,OAMbP,IANa,2CAAH,sDAUd,OACE,qCACE,uBAAMnF,SAAUA,EAAhB,UACE,uBACES,KAAK,OACLC,YAAY,eACZf,SAvBS,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAEZ4F,EAAkB5F,IAoBZA,MAAO2F,IAET,uBAAOjF,KAAK,SAASV,MAAM,sBAE7B,wBAAQa,QA5CU,WACpBjC,EAAYkH,UACZT,EAAQU,KAAK,MA0CX,yBChCSC,EAfI,SAAC,GAAiB,IAAfpD,EAAc,EAAdA,QACpB,OACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMqD,GAAG,IAAT,oBAEF,6BACE,eAAC,IAAD,CAAMA,GAAG,WAAT,UAAqBrD,EAAQ8C,YAA7B,wBC6BKQ,EA5BG,SAAC,GAA0C,IAAxCd,EAAuC,EAAvCA,YAAae,EAA0B,EAA1BA,WAAYvD,EAAc,EAAdA,QAC5C,OACE,eAAC,IAAD,WACGuD,GAAc,cAAC,EAAD,CAAYvD,QAASA,IACpC,cAAC,IAAD,UACGuD,EACC,qCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMzD,QAASA,MAEjB,cAAC,IAAD,CAAOwD,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAASzD,QAASA,EAASwC,YAAaA,MAE1C,cAAC,IAAD,CAAUkB,KAAK,IAAIL,GAAG,SAGxB,qCACE,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUC,KAAK,IAAIL,GAAG,eCkBnBM,MA9Cf,WAAgB,IAAD,EACWpH,oBAAS,GADpB,mBACNqH,EADM,KACAC,EADA,OAEuBtH,oBAAS,GAFhC,mBAENgH,EAFM,KAEMO,EAFN,OAGiBvH,mBAAS,MAH1B,mBAGNyD,EAHM,KAGG+D,EAHH,KA8Bb,OA1BA9B,qBAAU,WACRjG,EAAYgI,oBAAmB,SAACC,GAC1BA,GACFH,GAAc,GACdC,EAAW,CACTjB,YAAamB,EAAKnB,YAClBtC,IAAKyD,EAAKzD,IACVyC,cAAe,SAACiB,GAAD,OAAUD,EAAKhB,cAAciB,QAG9CJ,GAAc,GACdC,EAAW,OAEbF,GAAQ,QAET,IAYD,qCACGD,EACC,cAAC,EAAD,CACEpB,YAbY,WAClB,IAAMyB,EAAOjI,EAAYmI,YACzBJ,EAAW,CACTjB,YAAamB,EAAKnB,YAClBtC,IAAKyD,EAAKzD,IACVyC,cAAe,SAACiB,GAAD,OAAUD,EAAKhB,cAAciB,OASxCX,WAAYA,EACZvD,QAASA,IAGX,eAEF,oDAAwB,IAAIc,MAAOsD,qBCzCzCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.261f7b5b.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"../fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Email\"\n        required\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Password\"\n        required\n        value={password}\n        onChange={onChange}\n      />\n      <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n      {error}\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Log in\" : \"Create Account\"}\n      </span>\n    </form>\n  );\n};\n\nexport default AuthForm;\n","import React, { useState } from \"react\";\nimport AuthForm from \"../components/AuthForm\";\nimport { authService, firebaseInstance } from \"../fbase\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button name=\"google\" onClick={onSocialClick}>\n          Continue with Google\n        </button>\n        <button name=\"github\" onClick={onSocialClick}>\n          Continue with Github\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    toggleEditing();\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              placeHolder=\"Edit your nweets\"\n              value={newNweet}\n              onChange={onChange}\n              required\n            />\n            <input type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Nweet</button>\n              <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(null);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== null) {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(null);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        value={nweet}\n        onChange={onChange}\n        placeholder=\"What's on your mind?\"\n        maxLength={120}\n      />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Nweet\" />\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" height=\"50px\" />\n          <button onClick={onClearAttachment}>Clear</button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport Nweet from \"../components/Nweet\";\nimport { dbService, storageService } from \"../fbase\";\n\nimport NweetFactory from \"../components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div>\n      <NweetFactory userObj={userObj} />\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService, dbService } from \"../fbase\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .get();\n  };\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Display name\"\n          onChange={onChange}\n          value={newDisplayName}\n        />\n        <input type=\"submit\" value=\"Update profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log out</button>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">{userObj.displayName}'s profile</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing\"\n      )}\n      <footer>&copy; Nwitter {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}